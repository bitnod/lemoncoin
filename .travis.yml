# errata:
# - A travis bug causes caches to trample eachother when using the same
#   compiler key (which we don't use anyway). This is worked around for now by
#   replacing the "compilers" with a build name prefixed by the no-op ":"
#   command. See: https://github.com/travis-ci/travis-ci/issues/4393
# - sudo/dist/group are set so as to get Blue Box VMs, necessary for [loopback]
#   IPv6 support

sudo: required
dist: precise
group: legacy

os: linux
language: cpp
compiler: gcc
env:
  global:
    - MAKEJOBS=-j3
    - RUN_TESTS=false
    - CHECK_DOC=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
    - secure: "n8135wOgZv59bE49RZSwgjZfZVVXODdan1CrzPfCSwdOVyOLS4C5hLb7sEs3u8BAtVSvHtl5T8ii15YQx4V3OFMZs556cSvM2SbAEnPlELz+Yn5XeqC11QNzrK9HQbx6Xs2dOmRRANr05BP2e0BpPPUlF2HRZmVsc1IyFJ+ZtzxrW3TspES6+cbdfnirUrc6CMwvxoboSRKrrAfsWFoBeGCGZ3IawLSK15GDsjMBv6lTgCmwjhC/eTT3PLQhLI3ivgkDWHhaK3UNGg+CnsGV5jHx61DsXNk0kFVdjto5UHeQlAALVSZoNiGNn4npigr1+Lgn95t8IgPlQ7dGDxThK3+UIjcNuZjZEkYHu7fPBcK8+NYA2fJ/Mn+s54lytXMPB1YAbAU3RoxFRogktKHRbGbV0XfeFBHP9cxHK1MLq8/tymjK/bsjIcNL0Gz3BXWJhf4WNGBrOnAOmRMSHk55MhKzm8IfBaG4/u+lvfBtzEmf6Z/8S1SsdjOhagt5xLog+KT1PV8cohIY1dBizSdE6vOnxGQhQ6UHEJZieCKwPB+4lc0E0VkWSoXUmvmjmtxmmNXGgdUMS8ifA5gpwyGPNN9ZKgbnZNuHAMmCLh7O88QYPSUzMO9QDAfPVMtCa2AS0jC58yJuPkiObQ/FPgJ1qAN+pTrWa0ITChekn59YPps="
    - secure: "cB043n3zFWHbngoBQnGwmEVIFnh58OO3zQp7B7u0OFTQiX8EgE6cq5NV7jiqI4c/m0f4YeHEeBLBRNbnVIZAGr7OEN092zj068V/jdOUk+t8r6E9HnyapBzwvRzGjhVTRzMUGradHqyRLVMe5WSGz2a5S2HV/uewQ1zXaoGuj2smNlEYg1ORou9QnD9LQr5aryzdeS2TDKu/DzN6LvwGQqFcJM84Th+M+z12YX1e2qiHYSPoCpLJe2eJCim3/eARkDw4RDuCeUdC52AIoTlrBZgH9NIm/IJgHnd4VO7PDgPTgglT+vfd0lag8982XYCg4fT5e3Z3fTmmkHffrXe7Nuy+jdLxxHzix707/ptxmqIZRXTEKoH3pqMIZrBIE0R0+iX+beDri+C/cmydWIKgAxBXb0foBIiQWxt3JQRx1jz6Ep6hvw77KDwJmPW2snfFvHCZPbj0myL7IOaY0gDe/Ubz3V1+Itqv6EOiNZPFrkmXQWTdDTj78TbpnycVyWR501JJOZ55ayuYh51FDRefIAYhs7AhJIXeOj5y29NcTHs6VUm1cuQBvVu/aQ3jdaK6Y+vrkwAHPpb+biC98MnH4/Ta/3ATn2bmCNnymSCe8UV+AnTvY9L84a45EZF4Yi2hBu7QzzfZuY33rxdEHdadLhspXZ58h42/PsgDoeNJzJ4="    
    - secure: "SXm953DD8RVMj2MQ5AaTk9AyK+NKBmdQuoEA8JKumQH3SbFXmGpnCCRzbvgqxAmpVQUf9qfp9Kaze6jpHtp2mU8OVWCkpCR5/rUwGlqAuquiLfhRnqKT4vgMbcqAOveB8XwtADJUd8C7S7L6gUJK5AEaEWQmjaPE0yfWL2i6/zj84v/DM8HFkjwyPhy9ujeaHQXzqBFfR5qVnpX4OammZ03hZIEHmJPUfiZ1K8xKD7+6EwyoaYjomw9KAsK1hBCe3Vr2Oy+GfUCDhLH/LhzKziLbaJz6qlNfWYO1qBfDHhj2dMc9H4uAtEz1DJrb6Gh/DnIBZXA20KTV7W7CK2UI5UClCxcfbvsaihsuiUOKm4HysVY9wNI7Srbv7H6Y3IDgMWqK1dbIanJ+/Hw3A7ajTbcdfsiKQ9DcDPmYZJ16LGXU47QqEmTWcVSgxBbnX8wm05EHAJQOsW82ZBiBIrYpieOxZWTytknOcGiNHQY7vLpU3O8JPAW48nqzKR5xW1LKvwe9x++M6eOWtRJUcrw07TevEEDaoJtDXigIRUQGiFkgIiy5+WAr/vQFvy3ZqDby7XK0L3oEegwbqzqDMa2y1AH+tsyti+Gv9DTtiDc+FpxJ/YAJ5hgljJzE4qekph5m+O19fi6AsS3ul+zb0kJVSyASr7d4gJkoub167k4w/Wc="
    - secure: "C45Tz4aEBQUihFOFg+fh8pvwWjH5qHwuwflv1hK4Yu4edirquDYXWOd2uTdm6r+rR6C9YZWJfz+XSHVmKAE3fWblmkHCFp2+8aQ9TkpwilSqYVMf+2FrkPX2MTJ4T4YQMlA19Z4fq/YF1FPSwm8884PgAQQwtgbmq6QzVoEQS7ECiVg0ZS53KoHwDCm0T7CxkNYljIzZVCgpD6NHouIJROMqPx3oIuGFNETu6bBeGTyT1egTniV6VzmoncIs4e0sioV+UAnBgYb5wQ5gFow0r8N+Xr2lK5t6Urv7tzDkFHBxcw45FhCXBUGGGfgOVWr5jT+/SD7I53a3P/7yCH2tIStNNBjyr/qiSFyyWQGwkisxa/HGstjkWvbu33baK1B4x0ZTelJLa7eqZu3bGtzZ21Ev1Y2jemwiv/7hgwaEUoVN1/K2ce0P39n29tuatfNJNJKsAb698JwzaqIfdGUNHdrjIdscaln7A00N9+kgWlpnrwO3key14m1MO9Y5g4we9BNs3E8BpvVocTFlyQeBZ4ws5z3BTzQL/1qv/uE9BQ5JAAd3/0l3hb87BB2BU48o8uFBvIrw+DUpuWAn0aMKHYxcbtpDcq7wjQKbtJ4YEsx+SYNgTRpW9xoM293H/4a+YH94gIkbs6nb+/fNSWyFAksfO1F6y7Jxtd1BUzYjCzw="
addons:
    apt:
        packages:
            - sshpass
cache:
  apt: true
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
matrix:
  fast_finish: true
  include:
# Arm is not yet supported because of Scrypt-Jane
#    - compiler: ": ARM"
#      env: HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" DEP_OPTS="NO_QT=1" CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
    - compiler: ": Win32"
      env: HOST=i686-w64-mingw32 PPA="ppa:ubuntu-wine/ppa" PACKAGES="nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j2"
    - compiler: ": Win64"
      env: HOST=x86_64-w64-mingw32 PPA="ppa:ubuntu-wine/ppa" PACKAGES="nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc" RUN_TESTS=true GOAL="deploy" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j2"
    - compiler: ": 32-bit + dash"
      env: HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python-zmq" PPA="ppa:chris-lea/zeromq" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash"
    - compiler: ": bitcoind"
      env: HOST=x86_64-unknown-linux-gnu PACKAGES="bc python-zmq" PPA="ppa:chris-lea/zeromq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
    - compiler: ": No wallet"
      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
    - compiler: ": Cross-Mac"
      env: HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-reduce-exports" OSX_SDK=10.9 GOAL="deploy"
  exclude:
    - compiler: gcc
install:
    - if [ -n "$PACKAGES" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
before_script:
    - unset CC; unset CXX
    - if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export CCACHE_READONLY=1; fi
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir PACKAGE=bitcoin VERSION=$HOST
    - cd bitcoin-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
# Don't run tests, they are not ready yet
#    - if [ "$RUN_TESTS" = "true" ]; then make check; fi
#    - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
after_script:
    - export SSHPASS=$DEPLOY_PASS
    - sshpass -e scp -r $BASE_OUTDIR $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH

